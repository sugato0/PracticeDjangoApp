# Generated by Django 4.1.7 on 2023-05-22 15:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(default='NoName', max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('mobile', models.BigIntegerField(blank=True, default=89888880900)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('activation_key', models.CharField(max_length=40)),
                ('key_expires', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Blocks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('css', models.JSONField(blank=True, null=True)),
                ('html', models.JSONField(blank=True, null=True)),
                ('js', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('item', models.CharField(default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('language', models.CharField(default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SomeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_someUser', models.IntegerField()),
                ('someData', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Themas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('thema', models.CharField(default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User_profile_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='id')),
            ],
        ),
        migrations.CreateModel(
            name='Updates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_time', models.TimeField(auto_now_add=True)),
                ('blocks_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.blocks', verbose_name='id')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('update_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.updates', verbose_name='id')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notifications', models.CharField(max_length=100)),
                ('User_profile_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='id')),
                ('language_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.language')),
                ('thema_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.themas')),
            ],
        ),
        migrations.AddField(
            model_name='blocks',
            name='item_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.items', verbose_name='id'),
        ),
        migrations.AddField(
            model_name='user',
            name='site_id',
            field=models.ManyToManyField(to='user.site', verbose_name='id'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
